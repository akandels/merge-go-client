// This file was auto-generated by Fern from our API Definition.

package ats

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
	time "time"
)

type CandidateEndpointRequest struct {
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `json:"-"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync     *bool             `json:"-"`
	Model        *CandidateRequest `json:"model,omitempty"`
	RemoteUserId string            `json:"remote_user_id"`
}

type IgnoreCommonModelRequest struct {
	Reason  ReasonEnum `json:"reason,omitempty"`
	Message *string    `json:"message,omitempty"`
}

type CandidatesListRequest struct {
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-"`
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// If provided, will only return candidates with these email addresses; multiple addresses can be separated by commas.
	EmailAddresses *string `json:"-"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *CandidatesListRequestExpand `json:"-"`
	// If provided, will only return candidates with this first name.
	FirstName *string `json:"-"`
	// Whether to include data that was marked as deleted by third party webhooks.
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// If provided, will only return candidates with this last name.
	LastName *string `json:"-"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-"`
	// If provided, will only return candidates with these tags; multiple tags can be separated by commas.
	Tags *string `json:"-"`
}

type PatchedCandidateEndpointRequest struct {
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `json:"-"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync     *bool                    `json:"-"`
	Model        *PatchedCandidateRequest `json:"model,omitempty"`
	RemoteUserId string                   `json:"remote_user_id"`
}

type CandidatesRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *CandidatesRetrieveRequestExpand `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
}

type CandidatesListRequestExpand uint

const (
	CandidatesListRequestExpandApplications CandidatesListRequestExpand = iota + 1
	CandidatesListRequestExpandApplicationsAttachments
	CandidatesListRequestExpandAttachments
)

func (c CandidatesListRequestExpand) String() string {
	switch c {
	default:
		return strconv.Itoa(int(c))
	case CandidatesListRequestExpandApplications:
		return "applications"
	case CandidatesListRequestExpandApplicationsAttachments:
		return "applications,attachments"
	case CandidatesListRequestExpandAttachments:
		return "attachments"
	}
}

func (c CandidatesListRequestExpand) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", c.String())), nil
}

func (c *CandidatesListRequestExpand) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "applications":
		value := CandidatesListRequestExpandApplications
		*c = value
	case "applications,attachments":
		value := CandidatesListRequestExpandApplicationsAttachments
		*c = value
	case "attachments":
		value := CandidatesListRequestExpandAttachments
		*c = value
	}
	return nil
}

type CandidatesRetrieveRequestExpand uint

const (
	CandidatesRetrieveRequestExpandApplications CandidatesRetrieveRequestExpand = iota + 1
	CandidatesRetrieveRequestExpandApplicationsAttachments
	CandidatesRetrieveRequestExpandAttachments
)

func (c CandidatesRetrieveRequestExpand) String() string {
	switch c {
	default:
		return strconv.Itoa(int(c))
	case CandidatesRetrieveRequestExpandApplications:
		return "applications"
	case CandidatesRetrieveRequestExpandApplicationsAttachments:
		return "applications,attachments"
	case CandidatesRetrieveRequestExpandAttachments:
		return "attachments"
	}
}

func (c CandidatesRetrieveRequestExpand) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", c.String())), nil
}

func (c *CandidatesRetrieveRequestExpand) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "applications":
		value := CandidatesRetrieveRequestExpandApplications
		*c = value
	case "applications,attachments":
		value := CandidatesRetrieveRequestExpandApplicationsAttachments
		*c = value
	case "attachments":
		value := CandidatesRetrieveRequestExpandAttachments
		*c = value
	}
	return nil
}
