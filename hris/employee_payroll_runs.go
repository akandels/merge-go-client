// This file was auto-generated by Fern from our API Definition.

package hris

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
	time "time"
)

type EmployeePayrollRunsListRequest struct {
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-"`
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// If provided, will only return employee payroll runs for this employee.
	EmployeeId *string `json:"-"`
	// If provided, will only return employee payroll runs ended after this datetime.
	EndedAfter *time.Time `json:"-"`
	// If provided, will only return employee payroll runs ended before this datetime.
	EndedBefore *time.Time `json:"-"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *EmployeePayrollRunsListRequestExpand `json:"-"`
	// Whether to include data that was marked as deleted by third party webhooks.
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
	// If provided, will only return employee payroll runs for this employee.
	PayrollRunId *string `json:"-"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-"`
	// If provided, will only return employee payroll runs started after this datetime.
	StartedAfter *time.Time `json:"-"`
	// If provided, will only return employee payroll runs started before this datetime.
	StartedBefore *time.Time `json:"-"`
}

type EmployeePayrollRunsRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *EmployeePayrollRunsRetrieveRequestExpand `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
}

type EmployeePayrollRunsListRequestExpand uint

const (
	EmployeePayrollRunsListRequestExpandEmployee EmployeePayrollRunsListRequestExpand = iota + 1
	EmployeePayrollRunsListRequestExpandEmployeePayrollRun
	EmployeePayrollRunsListRequestExpandPayrollRun
)

func (e EmployeePayrollRunsListRequestExpand) String() string {
	switch e {
	default:
		return strconv.Itoa(int(e))
	case EmployeePayrollRunsListRequestExpandEmployee:
		return "employee"
	case EmployeePayrollRunsListRequestExpandEmployeePayrollRun:
		return "employee,payroll_run"
	case EmployeePayrollRunsListRequestExpandPayrollRun:
		return "payroll_run"
	}
}

func (e EmployeePayrollRunsListRequestExpand) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", e.String())), nil
}

func (e *EmployeePayrollRunsListRequestExpand) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "employee":
		value := EmployeePayrollRunsListRequestExpandEmployee
		*e = value
	case "employee,payroll_run":
		value := EmployeePayrollRunsListRequestExpandEmployeePayrollRun
		*e = value
	case "payroll_run":
		value := EmployeePayrollRunsListRequestExpandPayrollRun
		*e = value
	}
	return nil
}

type EmployeePayrollRunsRetrieveRequestExpand uint

const (
	EmployeePayrollRunsRetrieveRequestExpandEmployee EmployeePayrollRunsRetrieveRequestExpand = iota + 1
	EmployeePayrollRunsRetrieveRequestExpandEmployeePayrollRun
	EmployeePayrollRunsRetrieveRequestExpandPayrollRun
)

func (e EmployeePayrollRunsRetrieveRequestExpand) String() string {
	switch e {
	default:
		return strconv.Itoa(int(e))
	case EmployeePayrollRunsRetrieveRequestExpandEmployee:
		return "employee"
	case EmployeePayrollRunsRetrieveRequestExpandEmployeePayrollRun:
		return "employee,payroll_run"
	case EmployeePayrollRunsRetrieveRequestExpandPayrollRun:
		return "payroll_run"
	}
}

func (e EmployeePayrollRunsRetrieveRequestExpand) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", e.String())), nil
}

func (e *EmployeePayrollRunsRetrieveRequestExpand) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "employee":
		value := EmployeePayrollRunsRetrieveRequestExpandEmployee
		*e = value
	case "employee,payroll_run":
		value := EmployeePayrollRunsRetrieveRequestExpandEmployeePayrollRun
		*e = value
	case "payroll_run":
		value := EmployeePayrollRunsRetrieveRequestExpandPayrollRun
		*e = value
	}
	return nil
}
