// This file was auto-generated by Fern from our API Definition.

package accounting

import (
	fmt "fmt"
	time "time"
)

type ItemsListRequest struct {
	// If provided, will only return items for this company.
	CompanyId *string `json:"-"`
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-"`
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *ItemsListRequestExpand `json:"-"`
	// Whether to include data that was marked as deleted by third party webhooks.
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *string `json:"-"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-"`
	// A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
	ShowEnumOrigins *string `json:"-"`
}

type ItemsRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *ItemsRetrieveRequestExpand `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *string `json:"-"`
	// A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
	ShowEnumOrigins *string `json:"-"`
}

type ItemsListRequestExpand string

const (
	ItemsListRequestExpandCompany                            ItemsListRequestExpand = "company"
	ItemsListRequestExpandPurchaseAccount                    ItemsListRequestExpand = "purchase_account"
	ItemsListRequestExpandPurchaseAccountCompany             ItemsListRequestExpand = "purchase_account,company"
	ItemsListRequestExpandPurchaseAccountSalesAccount        ItemsListRequestExpand = "purchase_account,sales_account"
	ItemsListRequestExpandPurchaseAccountSalesAccountCompany ItemsListRequestExpand = "purchase_account,sales_account,company"
	ItemsListRequestExpandSalesAccount                       ItemsListRequestExpand = "sales_account"
	ItemsListRequestExpandSalesAccountCompany                ItemsListRequestExpand = "sales_account,company"
)

func NewItemsListRequestExpandFromString(s string) (ItemsListRequestExpand, error) {
	switch s {
	case "company":
		return ItemsListRequestExpandCompany, nil
	case "purchase_account":
		return ItemsListRequestExpandPurchaseAccount, nil
	case "purchase_account,company":
		return ItemsListRequestExpandPurchaseAccountCompany, nil
	case "purchase_account,sales_account":
		return ItemsListRequestExpandPurchaseAccountSalesAccount, nil
	case "purchase_account,sales_account,company":
		return ItemsListRequestExpandPurchaseAccountSalesAccountCompany, nil
	case "sales_account":
		return ItemsListRequestExpandSalesAccount, nil
	case "sales_account,company":
		return ItemsListRequestExpandSalesAccountCompany, nil
	}
	var t ItemsListRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (i ItemsListRequestExpand) Ptr() *ItemsListRequestExpand {
	return &i
}

type ItemsRetrieveRequestExpand string

const (
	ItemsRetrieveRequestExpandCompany                            ItemsRetrieveRequestExpand = "company"
	ItemsRetrieveRequestExpandPurchaseAccount                    ItemsRetrieveRequestExpand = "purchase_account"
	ItemsRetrieveRequestExpandPurchaseAccountCompany             ItemsRetrieveRequestExpand = "purchase_account,company"
	ItemsRetrieveRequestExpandPurchaseAccountSalesAccount        ItemsRetrieveRequestExpand = "purchase_account,sales_account"
	ItemsRetrieveRequestExpandPurchaseAccountSalesAccountCompany ItemsRetrieveRequestExpand = "purchase_account,sales_account,company"
	ItemsRetrieveRequestExpandSalesAccount                       ItemsRetrieveRequestExpand = "sales_account"
	ItemsRetrieveRequestExpandSalesAccountCompany                ItemsRetrieveRequestExpand = "sales_account,company"
)

func NewItemsRetrieveRequestExpandFromString(s string) (ItemsRetrieveRequestExpand, error) {
	switch s {
	case "company":
		return ItemsRetrieveRequestExpandCompany, nil
	case "purchase_account":
		return ItemsRetrieveRequestExpandPurchaseAccount, nil
	case "purchase_account,company":
		return ItemsRetrieveRequestExpandPurchaseAccountCompany, nil
	case "purchase_account,sales_account":
		return ItemsRetrieveRequestExpandPurchaseAccountSalesAccount, nil
	case "purchase_account,sales_account,company":
		return ItemsRetrieveRequestExpandPurchaseAccountSalesAccountCompany, nil
	case "sales_account":
		return ItemsRetrieveRequestExpandSalesAccount, nil
	case "sales_account,company":
		return ItemsRetrieveRequestExpandSalesAccountCompany, nil
	}
	var t ItemsRetrieveRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (i ItemsRetrieveRequestExpand) Ptr() *ItemsRetrieveRequestExpand {
	return &i
}
