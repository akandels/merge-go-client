// This file was auto-generated by Fern from our API Definition.

package accounting

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
	time "time"
)

type CompanyInfoListRequest struct {
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-"`
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *CompanyInfoListRequestExpand `json:"-"`
	// Whether to include data that was marked as deleted by third party webhooks.
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-"`
}

type CompanyInfoRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *CompanyInfoRetrieveRequestExpand `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
}

type CompanyInfoListRequestExpand uint

const (
	CompanyInfoListRequestExpandAddresses CompanyInfoListRequestExpand = iota + 1
	CompanyInfoListRequestExpandAddressesPhoneNumbers
	CompanyInfoListRequestExpandPhoneNumbers
)

func (c CompanyInfoListRequestExpand) String() string {
	switch c {
	default:
		return strconv.Itoa(int(c))
	case CompanyInfoListRequestExpandAddresses:
		return "addresses"
	case CompanyInfoListRequestExpandAddressesPhoneNumbers:
		return "addresses,phone_numbers"
	case CompanyInfoListRequestExpandPhoneNumbers:
		return "phone_numbers"
	}
}

func (c CompanyInfoListRequestExpand) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", c.String())), nil
}

func (c *CompanyInfoListRequestExpand) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "addresses":
		value := CompanyInfoListRequestExpandAddresses
		*c = value
	case "addresses,phone_numbers":
		value := CompanyInfoListRequestExpandAddressesPhoneNumbers
		*c = value
	case "phone_numbers":
		value := CompanyInfoListRequestExpandPhoneNumbers
		*c = value
	}
	return nil
}

type CompanyInfoRetrieveRequestExpand uint

const (
	CompanyInfoRetrieveRequestExpandAddresses CompanyInfoRetrieveRequestExpand = iota + 1
	CompanyInfoRetrieveRequestExpandAddressesPhoneNumbers
	CompanyInfoRetrieveRequestExpandPhoneNumbers
)

func (c CompanyInfoRetrieveRequestExpand) String() string {
	switch c {
	default:
		return strconv.Itoa(int(c))
	case CompanyInfoRetrieveRequestExpandAddresses:
		return "addresses"
	case CompanyInfoRetrieveRequestExpandAddressesPhoneNumbers:
		return "addresses,phone_numbers"
	case CompanyInfoRetrieveRequestExpandPhoneNumbers:
		return "phone_numbers"
	}
}

func (c CompanyInfoRetrieveRequestExpand) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", c.String())), nil
}

func (c *CompanyInfoRetrieveRequestExpand) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "addresses":
		value := CompanyInfoRetrieveRequestExpandAddresses
		*c = value
	case "addresses,phone_numbers":
		value := CompanyInfoRetrieveRequestExpandAddressesPhoneNumbers
		*c = value
	case "phone_numbers":
		value := CompanyInfoRetrieveRequestExpandPhoneNumbers
		*c = value
	}
	return nil
}
