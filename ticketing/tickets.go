// This file was auto-generated by Fern from our API Definition.

package ticketing

import (
	time "time"
)

type TicketsCollaboratorsListRequest struct {
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *TicketsCollaboratorsListRequestExpand `json:"-"`
	// Whether to include data that was marked as deleted by third party webhooks.
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
}

type TicketEndpointRequest struct {
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `json:"-"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync *bool          `json:"-"`
	Model    *TicketRequest `json:"model,omitempty"`
}

type TicketsListRequest struct {
	// If provided, will only return tickets for this account.
	AccountId *string `json:"-"`
	// If provided, will only return tickets assigned to the assignee_ids; multiple assignee_ids can be separated by commas.
	AssigneeIds *string `json:"-"`
	// If provided, will only return tickets assigned to the collection_ids; multiple collection_ids can be separated by commas.
	CollectionIds *string `json:"-"`
	// If provided, will only return tickets completed after this datetime.
	CompletedAfter *time.Time `json:"-"`
	// If provided, will only return tickets completed before this datetime.
	CompletedBefore *time.Time `json:"-"`
	// If provided, will only return tickets for this contact.
	ContactId *string `json:"-"`
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-"`
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// If provided, will only return tickets due after this datetime.
	DueAfter *time.Time `json:"-"`
	// If provided, will only return tickets due before this datetime.
	DueBefore *time.Time `json:"-"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *TicketsListRequestExpand `json:"-"`
	// Whether to include data that was marked as deleted by third party webhooks.
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format.
	IncludeRemoteFields *bool `json:"-"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
	// If provided, will only return sub tickets of the parent_ticket_id.
	ParentTicketId *string `json:"-"`
	// If provided, will only return tickets of this priority.
	//
	// * `URGENT` - URGENT
	// * `HIGH` - HIGH
	// * `NORMAL` - NORMAL
	// * `LOW` - LOW
	Priority *TicketsListRequestPriority `json:"-"`
	// If provided, will only return tickets for this project.
	ProjectId *string `json:"-"`
	// If provided, will only return tickets created in the third party platform after this datetime.
	RemoteCreatedAfter *time.Time `json:"-"`
	// If provided, will only return tickets created in the third party platform before this datetime.
	RemoteCreatedBefore *time.Time `json:"-"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *TicketsListRequestRemoteFields `json:"-"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-"`
	// If provided, will only return tickets updated in the third party platform after this datetime.
	RemoteUpdatedAfter *time.Time `json:"-"`
	// If provided, will only return tickets updated in the third party platform before this datetime.
	RemoteUpdatedBefore *time.Time `json:"-"`
	// Which fields should be returned in non-normalized form.
	ShowEnumOrigins *TicketsListRequestShowEnumOrigins `json:"-"`
	// If provided, will only return tickets of this status.
	//
	// * `OPEN` - OPEN
	// * `CLOSED` - CLOSED
	// * `IN_PROGRESS` - IN_PROGRESS
	// * `ON_HOLD` - ON_HOLD
	Status *TicketsListRequestStatus `json:"-"`
	// If provided, will only return tickets matching the tags; multiple tags can be separated by commas.
	Tags *string `json:"-"`
	// If provided, will only return tickets of this type.
	TicketType *string `json:"-"`
}

type PatchedTicketEndpointRequest struct {
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `json:"-"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync *bool                 `json:"-"`
	Model    *PatchedTicketRequest `json:"model,omitempty"`
}

type TicketsRemoteFieldClassesListRequest struct {
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// Whether to include data that was marked as deleted by third party webhooks.
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
}

type TicketsRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *TicketsRetrieveRequestExpand `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format.
	IncludeRemoteFields *bool `json:"-"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *TicketsRetrieveRequestRemoteFields `json:"-"`
	// Which fields should be returned in non-normalized form.
	ShowEnumOrigins *TicketsRetrieveRequestShowEnumOrigins `json:"-"`
}
